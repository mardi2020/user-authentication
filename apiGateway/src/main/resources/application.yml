server:
  port: 8000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

token:
  access-expired-time: 300000
  refresh-expired-time: 7000000
  secret: token_key

spring:
  application:
    name: apigateway-service
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "http://localhost:3000"
            allowdMethods:
              - POST
              - GET
              - PUT
              - PATCH
              - DELETE
              - OPTIONS
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/access-token/**
            - Method=GET
          filters:
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users/**
            - Method=PUT
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users/email
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users/all
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
            - RoleFilter

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users
            - Method=DELETE,GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter

        - id: join-service
          uri: lb://JOIN-SERVICE
          predicates:
            - Path=/join-service/join
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/join-service/(?<segment>.*), /$\{segment}

        - id: join-service
          uri: lb://JOIN-SERVICE
          predicates:
            - Path=/join-service/leave
            - Method=DELETE
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/join-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter

        - id: find-info-service
          uri: lb://FIND-INFO-SERVICE
          predicates:
            - Path=/find-info-service/**
            - Method=PATCH,GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/find-info-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter

        - id: user-manage-service
          uri: lb://USER-MANAGE-SERVICE
          predicates:
            - Path=/user-manage-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-manage-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter

        - id: group-service
          uri: lb://GROUP-SERVICE
          predicates:
            - Path=/group-service/**
            - Method=GET,POST,DELETE
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/group-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
