version: "3"

services:
  discovery:
    container_name: discovery
    build:
      context: ./eurekaDiscovery
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - myuser-network

  gateway:
    container_name: gateway
    build:
      context: ./apiGateway
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
    depends_on:
      - discovery
    networks:
      - myuser-network

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      myuser-network:
        ipv4_address: 172.18.0.100

  kafka:
    image: wurstmeister/kafka:2.12-2.3.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 172.18.0.101
      KAFKA_CREATE_TOPICS: "deleted-user"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - myuser-network

  find-info-service:
    container_name: find
    build:
      context: ./find-info-service
      dockerfile: Dockerfile
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
      - spring.redis.host=my-redis
    depends_on:
      - discovery
      - my-redis
    restart: always
    networks:
      - myuser-network

  user-service:
    container_name: user
    build:
      context: ./user-service
      dockerfile: Dockerfile
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
      - spring.redis.host=my-redis
      - spring.datasource.url=jdbc:mysql://user-mysql:3306/userDB
      - kafka.host=172.18.0.101
      - kafka.port=9092
    depends_on:
      - user-mysql
      - discovery
      - my-redis
      - kafka
    restart: always
    networks:
      - myuser-network

  user-mysql:
    container_name: user-mysql
    build:
      context: ./user-mysql
      dockerfile: Dockerfile
    ports:
      - "3306:3306"
    networks:
      - myuser-network

  my-redis:
    container_name: my-redis
    image: redis:alpine
    command: redis-server --port 6379
    hostname: redis_boot
    labels:
      - "name=redis"
      - "mode=standalone"
    ports:
      - "6379:6379"
    networks:
      - myuser-network

  group-service:
    container_name: group
    build:
      context: ./group-service
      dockerfile: Dockerfile
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
      - spring.datasource.url=jdbc:mysql://group-mysql:3306/groupDB
      - kafka.host=172.18.0.101
      - kafka.port=9092
    depends_on:
      - group-mysql
      - discovery
      - kafka
    restart: always
    networks:
      - myuser-network

  group-mysql:
    container_name: group-mysql
    build:
      context: ./group-mysql
      dockerfile: Dockerfile
    ports:
      - "3307:3306"
    networks:
      - myuser-network

  join-service:
    container_name: join
    build:
      context: ./join-service
      dockerfile: Dockerfile
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
      - spring.redis.host=my-redis
    restart: always
    depends_on:
      - my-redis
      - discovery
    networks:
      - myuser-network

  user-manage-service:
    container_name: manage
    build:
      context: ./user-manage-service
      dockerfile: Dockerfile
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
      - spring.redis.host=my-redis
    depends_on:
      - discovery
      - my-redis
    restart: always
    networks:
      - myuser-network

networks:
  myuser-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/16
          gateway: 172.18.0.1